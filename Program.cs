using System;

namespace DZ_Arrays
{
    class Program
    {
        static void Main(string[] args)
        {
            /*
             *  • Задание 1
             *      A. Выучите основные конструкции и понятия, рассмотренные на уроке.
             */

             SolutionOne();                                         // Возвращает метод static void SolutionOne()

             /*
              * • Задание 2
              *     A. Создать массив размера N элементов, заполнить его произвольными целыми
              *     значениями (размер массива задает пользователь).
              *         1. Вывести на экран:
              *             • Наибольшее значение массива;
              *             • Наименьшее значение массива;
              *             • Общую сумму всех элементов;
              *             • Среднее арифметическое всех элементов;
              *             • Вывести все нечетные значения;
              */

                    System.Console.Write("Введите размер массива N = ");

                int N = int.Parse(Console.ReadLine());              // Введение размера массива
                int [] ArrayN = new int [N];                        // Объявление и инициализация массива
                
                    System.Console.WriteLine("Заполните массив: ");
            
                for(int i = 0; i < ArrayN.Length; i++)              // Цикл для заполнения массива
                {
                    System.Console.Write($"Array_N [{i}] = ");     
                    ArrayN [i] = int.Parse(Console.ReadLine());     // Заполнение элелементов(индексов) массива 
                }
                
                // Ввыведем на экран заполненный массив
                for(int j = 0; j < ArrayN.Length; j++)
                {
                    System.Console.Write(ArrayN[j] + " ");          // Значения Элементы массива
                }

                    System.Console.WriteLine();
                
                // • Наибольшее значение массива
                int max = ArrayN[0];                        // Присваиваем любое значение массива в переменную max
                for(int j = 0; j < ArrayN.Length; j++)
                {   
                    if(max < ArrayN[j])                     // Если max меньше элементов массива                
                    {
                        max = ArrayN[j];                    // то max равен индексу j этого массива
                    }
                }
                    System.Console.WriteLine("Наибольшее значение массива ArrayN = " + max);
                
                // • Наименьшее значение массива;
                int min = ArrayN[0];                        // Присваиваем любое значение массива в переменную min
                for(int j = 0; j < ArrayN.Length; j++)
                {   
                    if(min > ArrayN[j])                     // Если min меньше элементов массива                
                    {
                        min = ArrayN[j];                    // то min равен индексу j этого массива
                    }
                }
                    System.Console.WriteLine("Наименьшее значение массива ArrayN = " + min);
                
                // • Общая сумма всех элементов;
                //               и
                // • Среднее арифметическое всех элементов
                //               и
                // • Все нечетные элементы массива

                double sum = 0;                             // Инициализируем пустую переменную для суммы
                double avg = 0;                             // Инициализируем пустую переменную для средней арифметической
                    System.Console.Write("Нечетные элементы массива ArrayN = ");
                for(int j = 0; j < ArrayN.Length; j++)
                {   
                    sum += ArrayN[j];                       // Суммирование элементов
                    if((ArrayN[j] % 2) != 0)                // Поиск нечетного элемента массива
                    {
                        System.Console.Write(ArrayN[j] + " ");
                    }
                }
                avg = sum / 2;                              // Формула средней арифметической
                    System.Console.WriteLine();
                    System.Console.WriteLine("Сумма элементов массива ArrayN = " + sum);
                    System.Console.WriteLine("Среднее арифметическое элементов массива ArrayN = " + avg);
                

              /*
               *    • Задание 3
               *        A. Создайте проект, который принимает в качестве аргумента массив целочисленных
               *        элементов и возвращает инвертированный массив (элементы массива в обратном
               *        порядке).
               */
                    
               /*
                *   • Задание 4
                *       A. Создать массив размера N элементов, заполнить его произвольными целыми
                *       значениями (размер массива задает пользователь).
                *           1. Выведите на экран.
                *           2. Создайте целочисленную переменную count (задает пользователь), index
                *               (задает пользователь).
                *           3. Создайте новый массив верните часть полученного в качестве аргумента
                *               массива начиная с позиции, указанной в аргументе index, размерностью,
                *               которая соответствует значению аргумента count.
                *           4. Если аргумент count содержит значение больше, чем количество элементов,
                *               которые входят в выбираемую часть исходного массива (от указанного индекса
                *               index, до индекса последнего элемента), то при формировании нового массива
                *               размерностью в count, заполните единицами те элементы, которые не были
                *               скопированы из исходного массива.
                */

                Console.ReadKey();
        }

        static void SolutionOne()
        {
            System.Console.WriteLine("/////////////////////////////OK////////////////////////////////");
        }
    }
}
